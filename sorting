#include <stdio.h>
#include <string.h>

#define maxrow 500
#define maxcol 500

typedef struct {
    char day[3];
    char month[3];
    char year[5];
} date;

typedef struct {
    char accountnum[11];
    char name[100];
    char mail[50];
    char mobilenum[12];
    double balance;
    date dateOpened;
} Accounts;
void print_accounts(Accounts acc) {
    printf("Account Number=%s\nName=%s\nEmail=%s\nBalance=%.2f\nMobile Number=%s\nDate Opened=%s/%s/%s\n",
           acc.mobilenum, acc.name, acc.mail, acc.balance, acc.mobilenum, acc.dateOpened.day,
           acc.dateOpened.month, acc.dateOpened.year);
}

void assign(char temp[], Accounts *acc) {
    char *token = strtok(temp, ",");
    strcpy(acc->accountnum, token);
    token = strtok(NULL, ",");
    strcpy(acc->name, token);
    token = strtok(NULL, ",");
    strcpy(acc->mail, token);
    token = strtok(NULL, ",");
    sscanf(token, "%lf", &acc->balance);
    token = strtok(NULL, ",");
    strcpy(acc->mobilenum, token);
    token = strtok(NULL, "/");
    strcpy(acc->dateOpened.day, token);
    token = strtok(NULL, "/");
    strcpy(acc->dateOpened.month, token);
    token = strtok(NULL, "/");
    strcpy(acc->dateOpened.year, token);
}
void name_bubbleSort(Accounts acc[], int count) {
    int i, j;
    Accounts temp;

    for (i = 0; i < count - 1; i++) {
        for (j = 0; j < count - i - 1; j++) {
            if (strcmp(acc[j].name, acc[j + 1].name) > 0) {
                // Swap accounts
                temp = acc[j];
                acc[j] = acc[j + 1];
                acc[j + 1] = temp;
            }
        }
    }
}
void balance_bubbleSort(Accounts acc[], int count) {
    int i, j;
    Accounts temp;

    for (i = 0; i < count - 1; i++) {
        for (j = 0; j < count - i - 1; j++) {
            if (acc[j].balance > acc[j + 1].balance) {
                // Swap accounts
                temp = acc[j];
                acc[j] = acc[j + 1];
                acc[j + 1] = temp;
            }
        }
    }
}

int main() {
    FILE *file;
    char temp[maxrow][maxcol];
    int count = 0;
    Accounts acc[maxrow];

    // Open the file
    file = fopen("C:\\Users\\Yassmin\\accounts.txt", "r+");
    if (file == NULL) {
        printf("Failed to open the file.\n");
        return 1;
    }

    // Read names from the file
    while (fgets(temp[count], maxcol, file) != NULL) {
        
        assign(temp[count], &acc[count]);
        count++;
    }
    char namess[200];
    int i=0;
    while(i<=count)
	{
	    namess[i]=acc->name[i];
        i++;
    }

    int n;
    printf("do you want sorting be done based on name or balance or date ? ");
    printf("enter sorting option: \n");
    printf("1 for sorting by name\n");
    printf("2 for sorting by date\n");
    printf("3 for sorting by balance\n");
    scanf("%d",&n);

    switch(n)
    {
      case 1:name_bubbleSort(acc,i);
      case 3:balance_bubbleSort(acc,i);
    }

    
    
    for (int i = 0; i < count; i++) {
        print_accounts( acc[i]);
    }

    
    fclose(file);


    return 0;
}
